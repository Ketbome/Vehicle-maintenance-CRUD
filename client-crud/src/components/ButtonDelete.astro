---
interface ButtonProps {
  id: number;
}

// Obtener las props con tipos
const { id } = Astro.props as ButtonProps;

---
<a class="delete flex-row justify-center texte-white cursor-pointer hover:bg-slate-700 focus:ring-4 focus:outline-none focus:ring-[#1da1f2]/50 font-medium rounded-lg px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-[#1da1f2]/55 mr-2 mb-2 hover:shadow-lg transition-all duration-200 ease-in-out hover:scale-110 scale-90 gap-x-2 opacity-70 hover:opacity-100" data-id={id}>
    <slot name="before" />
    <slot />
    <slot name="after" />
</a>

<script>
    // Find all buttons with the `alert` class on the page.
    document.addEventListener('click', (event) => {
      // Verificar si el click fue en un elemento con la clase 'delete'
      const target = event.target as HTMLElement;
      if (target.closest('a.delete')) {
        const button = target.closest('a.delete') as HTMLAnchorElement;
        const autoId = button.getAttribute('data-id');
        
        // Confirmar y proceder con la eliminación
        const confirmado = confirm('¿Estás seguro de que quieres eliminar este auto?');
        if (confirmado && autoId) {
          eliminarAuto(Number(autoId));
        }
      }
    });
  
    async function eliminarAuto(id: number) {
      try {
        const respuesta = await fetch(`http://127.0.0.1:8000/api/vehiculos/${id}`, {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ id: id }),
        });
        if (!respuesta.ok) {
          throw new Error("Error al eliminar el auto");
        }
  
        alert("Auto eliminado con éxito");
        
        location.reload();
      } catch (error) {
        console.error("Hubo un error al eliminar el auto:", error);
      }
    };
  
  </script>